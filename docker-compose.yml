services:
  kafka:
    image: bitnamilegacy/kafka:3.7.0-debian-12-r2
    container_name: jackpot-kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    healthcheck:
      test:
        [
          "CMD",
          "/opt/bitnami/kafka/bin/kafka-topics.sh",
          "--bootstrap-server",
          "localhost:9092",
          "--list",
        ]
      interval: 10s
      timeout: 10s
      retries: 20

  redis:
    image: redis:7
    container_name: jackpot-redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: jackpot-redis-commander
    depends_on:
      redis:
        condition: service_started
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"

  app:
    build: .
    container_name: jackpot-service
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8080:8080"
    command: ["java", "-jar", "/app/app.jar"]
